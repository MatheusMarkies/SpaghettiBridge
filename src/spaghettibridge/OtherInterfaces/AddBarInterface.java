/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package spaghettibridge.OtherInterfaces;

import com.sun.scenario.effect.Brightpass;
import java.awt.Color;
import java.awt.event.WindowEvent;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import spaghettibridge.BridgeGraphics;
import spaghettibridge.Components.BridgeBar;
import spaghettibridge.Components.Node;
import spaghettibridge.Utilities.Vector2D;

/**
 *
 * @author Matheus Markies
 */
public class AddBarInterface extends javax.swing.JFrame {

    BridgeGraphics bridgeGraphics;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CreateBar = new javax.swing.JButton();
        FirstNode = new javax.swing.JComboBox<>();
        SecondNode = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        CreateBar.setText("Criar");
        CreateBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateBarActionPerformed(evt);
            }
        });

        FirstNode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstNodeActionPerformed(evt);
            }
        });

        SecondNode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SecondNodeActionPerformed(evt);
            }
        });

        jLabel1.setText("No 1:");

        jLabel2.setText("No 2:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(CreateBar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(12, 12, 12)
                        .addComponent(FirstNode, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(12, 12, 12)
                        .addComponent(SecondNode, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel1))
                    .addComponent(FirstNode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel2))
                    .addComponent(SecondNode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CreateBar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FirstNodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstNodeActionPerformed

//        if (SecondNode.getSelectedItem() != null) {
//            FirstNode.removeItem(SecondNode.getSelectedItem());
//        }
    }//GEN-LAST:event_FirstNodeActionPerformed

    private void CreateBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateBarActionPerformed
        if (FirstNode.getSelectedItem() != null && SecondNode.getSelectedItem() != null) {
            BridgeBar bar = new BridgeBar(bridgeGraphics.getNodes().get(FirstNode.getSelectedItem()).getPosition(),
                    bridgeGraphics.getNodes().get(SecondNode.getSelectedItem()).getPosition(),
                    new String[]{FirstNode.getSelectedItem().toString(),SecondNode.getSelectedItem().toString()});
            if (bridgeGraphics != null) {
                String barName = FirstNode.getSelectedItem().toString() + SecondNode.getSelectedItem().toString() + "";
                bridgeGraphics.getBars().put(barName, bar);
                
                Node A = bridgeGraphics.getNodes().get(FirstNode.getSelectedItem());
                Node B = bridgeGraphics.getNodes().get(SecondNode.getSelectedItem());
                
                A.getBars().put(barName, bar);
                B.getBars().put(barName, bar);
            }
            bridgeGraphics.repaint();
            this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        }

    }//GEN-LAST:event_CreateBarActionPerformed

    private void SecondNodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SecondNodeActionPerformed
//
//        if (FirstNode.getSelectedItem() != null) {
//            SecondNode.removeItem(FirstNode.getSelectedItem());
//        }
    }//GEN-LAST:event_SecondNodeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateBar;
    private javax.swing.JComboBox<String> FirstNode;
    private javax.swing.JComboBox<String> SecondNode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

    public AddBarInterface(BridgeGraphics bridgeGraphics) {
        initComponents();
        this.bridgeGraphics = bridgeGraphics;
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {

                    FirstNode.removeAll();
                    SecondNode.removeAll();
                    for (Map.Entry<String, Node> node : bridgeGraphics.getNodes().entrySet()) {
                        FirstNode.addItem(node.getKey());
                        SecondNode.addItem(node.getKey());
                    }

                    FirstNode.setSelectedIndex(0);
                    SecondNode.setSelectedIndex(1);

            }
        });
    }

}
