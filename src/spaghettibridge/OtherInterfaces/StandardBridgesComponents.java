/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package spaghettibridge.OtherInterfaces;

import java.awt.event.WindowEvent;
import java.util.TreeMap;
import spaghettibridge.AutoBridges.StandardBridges;
import spaghettibridge.BridgeGraphics;
import spaghettibridge.Components.Node;

/**
 *
 * @author Matheus Markies
 */
public class StandardBridgesComponents extends javax.swing.JFrame {

    BridgeGraphics bridgeGraphics;
    
    /**
     * Creates new form StandardBridgesComponents
     */
    public StandardBridgesComponents(BridgeGraphics bridgeGraphics) {
        initComponents();
        this.bridgeGraphics = bridgeGraphics;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Warren = new javax.swing.JButton();
        Simple = new javax.swing.JButton();
        AutoBars = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Warren.setText("Warren");
        Warren.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WarrenActionPerformed(evt);
            }
        });

        Simple.setText("Simples");
        Simple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SimpleActionPerformed(evt);
            }
        });

        AutoBars.setText("Barramento Automatico");
        AutoBars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AutoBarsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Warren)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Simple)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AutoBars)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Warren)
                    .addComponent(Simple)
                    .addComponent(AutoBars))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SimpleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SimpleActionPerformed
        bridgeGraphics.setNodes(StandardBridges.Simple.Nodes(bridgeGraphics.getWidth(),bridgeGraphics.getHeight()));
        bridgeGraphics.setBars(StandardBridges.Simple.Bars((TreeMap<String, Node>) bridgeGraphics.getNodes()));
        bridgeGraphics.repaint();
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_SimpleActionPerformed

    private void WarrenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WarrenActionPerformed
        bridgeGraphics.setNodes(StandardBridges.Warren.Nodes(bridgeGraphics.getWidth(),bridgeGraphics.getHeight()));
        //bridgeGraphics.setBars(StandardBridges.Warren.Bars((TreeMap<String, Node>) bridgeGraphics.getNodes()));
        bridgeGraphics.repaint();
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_WarrenActionPerformed

    private void AutoBarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AutoBarsActionPerformed
        bridgeGraphics.setBars(StandardBridges.autoConnect((TreeMap<String, Node>) bridgeGraphics.getNodes()));
        System.out.println("Essa funcao pode nao funcionar corretamente para todas as pontes!");
        bridgeGraphics.repaint();
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_AutoBarsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AutoBars;
    private javax.swing.JButton Simple;
    private javax.swing.JButton Warren;
    // End of variables declaration//GEN-END:variables
}
